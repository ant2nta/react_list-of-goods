{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","this","props","goods","map","good","PureComponent","goodsFromServer","App","state","isStarted","isReversed","isSortedAlph","isSortedLength","length","reverse","setState","sortByAlph","sortByLength","reset","visibleGoods","filter","sort","a","b","localeCompare","className","name","value","onChange","event","target","Array","_","i","type","onClick","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8RASMA,E,4JACJ,WACE,OACE,6BACGC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OACxB,6BACGA,GADMA,Y,GALKC,iBAcTN,IClBTO,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAQ,CACNC,WAAW,EACXP,MAAOI,EACPI,YAAY,EACZC,cAAc,EACdC,gBAAgB,EAChBC,OAAQ,G,EAGVC,QAAU,WACR,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBM,WAAa,WACX,EAAKD,UAAS,SAAAP,GAAK,MAAK,CACtBI,gBAAgB,EAChBD,cAAeH,EAAMG,kB,EAIzBM,aAAe,WACb,EAAKF,UAAS,SAAAP,GAAK,MAAK,CACtBG,cAAc,EACdC,gBAAiBJ,EAAMI,oB,EAI3BM,MAAQ,WACN,EAAKH,SAAS,CACZH,gBAAgB,EAChBD,cAAc,EACdD,YAAY,EACZG,OAAQ,K,4CAIZ,WAAU,IAAD,OACP,EAOIb,KAAKQ,MANPC,EADF,EACEA,UACAP,EAFF,EAEEA,MACAQ,EAHF,EAGEA,WACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,eACAC,EANF,EAMEA,OAGIM,EAAejB,EAAMkB,QAAO,SAAAhB,GAAI,OAAIA,EAAKS,QAAUA,KAczD,OAZIF,GACFQ,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CX,GACFO,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,OAASU,EAAEV,UAGvCH,GACFS,EAAaL,UAIb,sBAAKW,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mBAEChB,EACC,qCACE,cAAC,EAAD,CAAWP,MAAOiB,IAElB,qBAAKM,UAAU,oBAAf,SACE,wBACEC,KAAK,SACLC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAW,EAAKd,SAAS,CACjCF,QAASgB,EAAMC,OAAOH,SAJ1B,SAOG,YAAI,IAAII,MAAM,KAAK5B,KAAI,SAAC6B,EAAGC,GAAJ,OACtB,wBAAQN,MAAOM,EAAI,EAAnB,SAAuBA,EAAI,WAKjC,wBACEC,KAAK,SACLC,QAASnC,KAAKc,QACdW,UAAWW,IACT,iBACA,CAAE,aAAc1B,IALpB,qBAWA,wBACEwB,KAAK,SACLC,QAASnC,KAAKgB,WACdS,UAAWW,IACT,iBACA,CAAE,aAAczB,IALpB,iCAWA,wBACEuB,KAAK,SACLC,QAASnC,KAAKiB,aACdQ,UAAWW,IACT,iBACA,CAAE,aAAcxB,IALpB,4BAWA,wBACEsB,KAAK,SACLC,QAASnC,KAAKkB,MACdO,UAAU,mBAHZ,sBASF,wBACES,KAAK,SACLC,QAAS,kBAAM,EAAKpB,SAAS,CAAEN,WAAW,KAC1CgB,UAAU,oBAHZ,0B,GA/HQY,IAAMC,WA4IT/B,ICpKfgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f30240a0.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport './GoodsList.css';\n\ntype Props = {\n  goods: string[],\n};\n\ntype State = {};\n\nclass GoodsList extends PureComponent<Props, State> {\n  render() {\n    return (\n      <ul>\n        {this.props.goods.map(good => (\n          <li key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default GoodsList;\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.css';\nimport GoodsList from './Components/GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isStarted: boolean,\n  goods: string[],\n  isReversed: boolean,\n  isSortedAlph: boolean,\n  isSortedLength: boolean,\n  length: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    goods: goodsFromServer,\n    isReversed: false,\n    isSortedAlph: false,\n    isSortedLength: false,\n    length: 1,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlph = () => {\n    this.setState(state => ({\n      isSortedLength: false,\n      isSortedAlph: !state.isSortedAlph,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      isSortedAlph: false,\n      isSortedLength: !state.isSortedLength,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isSortedLength: false,\n      isSortedAlph: false,\n      isReversed: false,\n      length: 1,\n    });\n  };\n\n  render() {\n    const {\n      isStarted,\n      goods,\n      isReversed,\n      isSortedAlph,\n      isSortedLength,\n      length,\n    } = this.state;\n\n    const visibleGoods = goods.filter(good => good.length >= length);\n\n    if (isSortedAlph) {\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n    }\n\n    if (isSortedLength) {\n      visibleGoods.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Goods</h1>\n\n        {isStarted ? (\n          <>\n            <GoodsList goods={visibleGoods} />\n\n            <div className=\"select is-success\">\n              <select\n                name=\"length\"\n                value={length}\n                onChange={(event) => this.setState({\n                  length: +event.target.value,\n                })}\n              >\n                {[...new Array(10)].map((_, i) => (\n                  <option value={i + 1}>{i + 1}</option>\n                ))}\n              </select>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n              className={classNames(\n                'button is-info',\n                { 'is-success': isReversed },\n              )}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByAlph}\n              className={classNames(\n                'button is-info',\n                { 'is-success': isSortedAlph },\n              )}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n              className={classNames(\n                'button is-info',\n                { 'is-success': isSortedLength },\n              )}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"button is-danger\"\n            >\n              Reset\n            </button>\n          </>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isStarted: true })}\n            className=\"button is-primary\"\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}